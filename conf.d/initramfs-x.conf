# example /etc/initramfs-tools/conf.d/initramfs-x.conf

# this patches the initrd to build its depencies tree while it is running,
# and not when it is build,
# (this is mandatory for man options below)
#X_FORCE_UNCACHED_SCRIPT_ORDER=n             # default yes


# add all busybox applets as binaries
#X_ADD_BUSYBOX_APPLETS=n                     # default yes


# add some more debug helpers
#X_ADD_HELPERS=n                             # default yes


# this dumps the currently loaded keymap into the initrd, which is loaded on start of the initrd
#X_ADD_LOADED_KEYMAP=n                       # default yes


# this adds cdebootstrap to install fresh from initrd
#X_ADD_DEBOOTSTRAP=n                         # default yes


# if Debian does not detect that rootfs lies on a crypt device
# this enforces it, eg. on "root on ZFS"
#X_FORCE_CRYPTROOT=y                         # default no


# if systemd does not detect the depencies for rootfs correctly
# it might hang if you have "root on ZFS" and "ZFS on crypto"
#X_FIX_SYSTEMD_GENERATORS_CRYPTROOT=y        # default no


# fixes dropbear installation on the initrd
#X_FIX_CRYPTROOT_DROPBEAR=y                  # default no

# syncs the hostkeys of the running ssh deaemon (dropbear or sshd)
# with initrds versions
#  X_FIX_CRYPTROOT_SYNC_KEYS=y               # default no


# ensure that all loaded modules are added to the initrd
#X_ADD_LOADED_MODULES=y                      # default no

# add all udev rules from /etc/udev/rules.d
#X_ADD_UDEV_RULES=y                          # default no
# in case add all helpers to the initrd to
#X_FIX_UDEV_MISSING_EXECS=y                  # default no


# add module initutils instead of libkernel versions
#X_ADD_MODULE_INITUTILS=y                    # default no



#X_FORCE_INSTANT_RESUME_ON_DEV_ADD=y         # default no
#  X_FORCE_INSTANT_RESUME_ON_DEV_ADD_DEBUG=y # default no

# this ensures the same intefaces ordering and naming
# as on the live system
#X_UDEV_PERSISTENT_NET_RULES=y               # default no


# subtitutes /sbin/ipconfig with a script that uses a subset of your
# /etc/network/interfaces
#X_SUBST_IPCONFIG_IFUPDOWN=y                 # default no


# subtitutes /sbin/ipconfig with a script that uses udhcpc instead of kernel facilities
#X_SUBST_IPCONFIG_UDHCP=y               # default no


# remove all loaded network modules before starting from rootfs
#X_FORCE_NETWORK_UNLOAD_MODULES=y            # default no


# starts uvesafb whenit detect a parameter uvesafb on the kernel commandline
# eg.  uvesafb=640x480-60
#      uvesafb=1024x768-60
#X_ADD_UVESAFB=y                             # default no


# if you have a kernel with debugging, strip at least the initrds
# modules from its debug symbols
#X_STRIP_KMODS=y                             # default no

